module w_edge_r_E(datatypes, route_concrete) is

process w_edge_r_E [input, out_pe, out_s, out_n, out_e, fail : any](node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_q : Bool, flit_r : Bool, flit_s : Bool, arb_status : Bool in
	 input(?one_flit);

     flit_q := get_q(one_flit); -- y > 1
     flit_r := get_r(one_flit); -- x < 1
     flit_s := get_s(one_flit); -- y < 1

     if (not(flit_q)) and (not(flit_s)) and (flit_r) and (not(flit_p)) then
	    out_pe(one_flit) -- destination reached
     elsif (flit_q) then
	    -- first north, then east
	    -- Destination is on the north of (i,j) and packet cannot over-shoot due to on the edge.
	    route_concrete[out_n, out_e, fail](one_flit)
     elsif ((flit_s) and (flit_r) and (not(flit_p))) or ((not(flit_q)) and (not(flit_r))) then
   	    -- only south
	    -- Destination is on the south of (i,j). Source is E and on the S edge and has been detoured,
	    -- or NE and packet is N(x=i) after detour,
	    -- or source is N and packet go back to N(x=i) after detour.
	    out_s(?arb_status);
	    if arb_status == false then
	       fail(one_flit)	       
	    else
	       out_s(one_flit)
	    end if
	 end if
      end var
   end loop
end process

end module
