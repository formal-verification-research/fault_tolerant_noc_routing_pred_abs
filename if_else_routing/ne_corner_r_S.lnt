module ne_corner_r_S(datatypes, route_concrete) is

process ne_corner_r_S [input, out_ip, out_w, out_s, drop : any] (node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_p : Bool, flit_q : Bool, flit_r : Bool, flit_s : Bool in
	 input(?one_flit);
	 
     flit_p := get_p(one_flit); -- x > 1
     flit_q := get_q(one_flit); -- y > 1
     flit_r := get_r(one_flit); -- x < 1
     flit_s := get_s(one_flit); -- y < 1

     if (flit_p == true) and (flit_q == true) then
	    out_ip(one_flit) -- destination reached
     elsif (flit_q == false) and (flit_q == false) then
	    -- first west, then south
	    -- Destination is on the southwest or west of (i,j), and the packet
            -- has detoured at the last step. Illegal turn.
	    route_concrete[out_w, out_s, drop](one_flit)	    
     elsif (flit_q == true) and (flit_q == false) then
	    -- first west, then south
	    -- Destination is on the southwest or west of (i,j), and the packet
            -- has detoured at the last step. Illegal turn.
	    route_concrete[out_w, out_s, drop](one_flit)	    
	 end if
      end var      
   end loop
end process -- ne_corner_r_S

end module -- ne_corner_r_S
