module se_corner_r_W(datatypes, route_concrete) is

process se_corner_r_W [input, out_ip, out_n, out_w, fail, drop : any] (node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_p : Bool, flit_q : Bool, flit_s : Bool, arb_status : Bool in
	 input(?one_flit);

     flit_p := get_p(one_flit); -- x > 1
     flit_q := get_q(one_flit); -- y > 1
     flit_s := get_s(one_flit); -- y < 1

     if (flit_p) and (flit_s) then
	    out_ip(one_flit) -- destination reached
     elsif (not(flit_q)) and (not(flit_s)) and (flit_p) then
	    -- north first, then west (west is illegal turn)
	    route_concrete[out_n, out_w, drop](one_flit)
     elsif ((flit_q) and (flit_p)) or ((not(flit_q)) and (not(flit_s)) and (not(flit_p))) then
	    -- only north 
	    -- Destination is on the north of
            -- (i,j) for more than one node away.
            -- Packet has detoured on positive phase
	    out_n(?arb_status);
	    if arb_status == false then
	       fail(one_flit)
	    else
	       out_n(one_flit)
	    end if
	 end if		 
      end var        
   end loop

end process -- se_corner_r_W

end module -- se_corner_r_W
