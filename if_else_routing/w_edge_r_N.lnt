module w_edge_r_N(datatypes, route_concrete) is

process w_edge_r_N [input, out_pe, out_s, out_e, fail : any](node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_p : Bool, flit_q : Bool, flit_r : Bool, flit_s : Bool in
	 input(?one_flit);

     flit_p := get_p(one_flit); -- x > 1
     flit_q := get_q(one_flit); -- y > 1
     flit_r := get_r(one_flit); -- x < 1
     flit_s := get_s(one_flit); -- y < 1

     if (flit_q == false) and (flit_s == false) and (flit_r == true) then
	    out_pe(one_flit) -- destination reached
     elsif (flit_s == true) and (flit_r == false) then
   	    -- first south, then east
	    -- Destination is on the southeast or south of (i,j) before over-shooting (x>i),
	    -- or N(x=i) and to S, or detoured from NE(x=i)
	    route_concrete[out_s, out_e, fail](one_flit)
     elsif (flit_s == true) and (flit_r == true) then
   	    -- first south, then east
	    -- Destination is on the southeast or south of (i,j) before over-shooting (x>i),
	    -- or N(x=i) and to S, or detoured from NE(x=i)
	    route_concrete[out_s, out_e, fail](one_flit)
     elsif (flit_q == false) and (flit_s == false) and (flit_p == true) then
	    -- first south, then east
	    -- Destination is on the east of (i,j) and over-shooting
	    route_concrete[out_s, out_e, fail](one_flit)
     elsif (flit_q == true) and (flit_r == false) then
	    -- first east, then south
	    -- Destination is on the northeast of (i,j), after over-shooting.
	    route_concrete[out_e, out_s, fail](one_flit)
	 end if
      end var
   end loop
end process

end module
