module n_edge_r_S(datatypes, route_concrete) is

process n_edge_r_S [input, out_pe, out_w, out_s, out_e, fail, drop : any](node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_p : Bool, flit_q : Bool, flit_r : Bool, flit_s : Bool in
	 input(?one_flit);

     flit_p := get_p(one_flit); -- x > 1
     flit_q := get_q(one_flit); -- y > 1
     flit_r := get_r(one_flit); -- x < 1
     flit_s := get_s(one_flit); -- y < 1

     if (flit_p == false) and (flit_r == false) and (flit_q == true) then
	    out_pe(one_flit) -- destination reached
     elsif (flit_q == true) and (flit_p == true) then
	    -- first east, then south
	    -- Going south is illegal.
	    route_concrete[out_e, out_s, drop](one_flit)	    
     elsif (flit_q == false) and (flit_p == true) then
	    -- only east
	    -- Destination is on the southeast of (i,j).
	    -- It has detoured in the last step.
	    out_e(?arb_status);
	    if arb_status == false then
	       fail(one_flit)	       
	    else
	       out_e(one_flit)
	    end if
	 end if
      end var
   end loop
end process

end module
