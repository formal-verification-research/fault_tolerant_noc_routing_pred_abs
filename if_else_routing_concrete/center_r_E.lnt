module center_r_E(datatypes, route_concrete) is

process center_r_E [input, out_ip, out_w, out_s, out_n, fail : any](node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_dest: Coordinates in
	 input(?one_flit);
	 flit_dest := get_dest(one_flit);
	 if (get_y(flit_dest)==get_y(node_loc)) and (get_x(flit_dest)==get_x(node_loc)) then -- y = j and x = i
	    out_ip(one_flit) -- destination reached
	 elsif (get_y(flit_dest)>get_y(node_loc)) and (get_x(flit_dest)<get_x(node_loc)) then -- y > j and x < i
	    -- first west, then south
	    route_concrete[out_w, out_s, fail](one_flit)
	 elsif (get_y(flit_dest)>get_y(node_loc)) and (get_x(flit_dest)==get_x(node_loc)) then -- y > j and x = i
	    -- first west, then south
	    route_concrete[out_w, out_s, fail](one_flit)
	 elsif (get_y(flit_dest)>get_y(node_loc)) and (get_x(flit_dest)>get_x(node_loc)) then -- y > j and x > i
	    -- first north, then west
	    route_concrete[out_n, out_w, fail](one_flit)
	 elsif (get_y(flit_dest)==get_y(node_loc)) and (get_x(flit_dest)<get_x(node_loc)) then -- y = j and x < i
	    -- first west, then south
	    route_concrete[out_w, out_s, fail](one_flit)
	 elsif (get_y(flit_dest)<get_y(node_loc)) and (get_x(flit_dest)>get_x(node_loc)) then -- y < j and x > i
	    -- first south, then west
	    -- Destination is on the southeast of (i,j), and packet detoured W(x>i)
	    route_concrete[out_s, out_w, fail](one_flit)
	 elsif (get_y(flit_dest)<get_y(node_loc)) and (get_x(flit_dest)<get_x(node_loc)) then -- y < j and x < i
	    -- first south, then west
	    -- Destination is on the southwest of (i,j) and packet has detoured to N
	    route_concrete[out_s, out_w, fail](one_flit)
	 elsif (get_y(flit_dest)<get_y(node_loc)) and (get_x(flit_dest)==get_x(node_loc)) then -- y < j and x = i
	    -- first south, then west
	    -- **** Different from the original VHDL behavior. The VHDL description only tries south. ****
	    -- **** Reason for south only: Destination is on the south of (i,j). Packet has detoured to the north and x=i.***
	    -- **** Not sure if this assumption is correct. ****
	    route_concrete[out_s, out_w, fail](one_flit)
   	 end if
      end var
   end loop
end process

end module