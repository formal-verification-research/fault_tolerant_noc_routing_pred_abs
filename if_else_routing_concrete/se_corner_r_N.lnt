module se_corner_r_N(datatypes, route_concrete) is

process se_corner_r_N [input, out_ip, out_w, out_n, fail : any] (node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_dest : Coordinates, arb_status : Bool in
	 input(?one_flit);
	 flit_dest := get_dest(one_flit);
       	 if (get_y(flit_dest)==get_y(node_loc)) and (get_x(flit_dest)==get_x(node_loc)) then -- y=j and x=i
	    out_ip(one_flit) -- destination reached
	 elsif (get_y(flit_dest)==get_y(node_loc)) and (get_x(flit_dest)<get_x(node_loc)) then -- y=j and x<i
	    -- first west, then north
	    route_concrete[out_w, out_n, fail](one_flit)
	 elsif (get_y(flit_dest)>get_y(node_loc)) and (get_x(flit_dest)<=get_x(node_loc)) then -- y>j and x<=i
	    -- only west
	    -- Destination is on the north or northwest of (i,j).
            -- The packet has detoured on its turning point.
	    out_w(?arb_status);
	    if arb_status == false then
	       fail(one_flit)
	    else
	       out_w(one_flit)
	    end if
	 end if
      end var        
   end loop
   
end process -- se_corner_r_N

end module -- se_corner_r_N
