module n_edge_r_W(datatypes, route_concrete) is

process n_edge_r_W [input, out_pe, out_s, out_e, drop : any](node_loc : Coordinates) is
   loop
      var one_flit : Flit, flit_dest: Coordinates, arb_status : Bool in
	 input(?one_flit);
	 flit_dest := get_dest(one_flit);
	 if (get_y(flit_dest)==get_y(node_loc)) and (get_x(flit_dest)==get_x(node_loc)) then -- y = j and x = i
	    out_pe(one_flit) -- destination reached
	 elsif (get_y(flit_dest)==get_y(node_loc)) and (get_x(flit_dest)>get_x(node_loc)) then -- y = j and x > i
 	    -- first east, then south
	    --- Going south is illgal.
	    route_concrete[out_e, out_s, drop](one_flit)
	 elsif get_y(flit_dest)<get_y(node_loc) then -- y < j
 	    -- only south
	    -- Destination is on the south or southeast or southwest of (i,j).
	    -- Packet has detoured to x=1.
	    -- Illegal turn.
	    out_s(?arb_status);
	    if arb_status == false then
	       drop(one_flit)	       
	    else
	       out_s(one_flit)
	    end if
	 end if
      end var
   end loop
end process

end module